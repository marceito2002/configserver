def source = env.TAG_NAME ? env.TAG_NAME : env.BRANCH_NAME

def connectOpenShift(enviroment) { 
	echo 'Connecting with openshift $enviroment....'                 
	sh "oc login ${OPENSHIFT_ENPOINT} --token=${OPENSHIFT_TOKEN}"                
	sh "oc project $OPENSHIFT_PROJECT"
	echo 'Connected'       
}


def deployAppShift() { 
	sh "oc new-app aherreros/microservicesdocomo:${artifactID}-${artifactVersion} --name ${artifactID}"
	sh "oc expose svc/${artifactID}"       
}


def deployImageOpenShift() { 	
	sh "oc import-image ${artifactID}:${artifactID}-${artifactVersion} --from aherreros/microservicesdocomo:${artifactID}-${artifactVersion}"     
}

def updateEnvironmentOpenShift() { 	
	sh "oc import-image ${artifactID}:${artifactID}-${artifactVersion} --from aherreros/microservicesdocomo:${artifactID}-${artifactVersion}"     
}




import com.buongiorno.jenkinsci.plugins.delivery.*;




pipeline {
    agent any

    tools {
        maven 'Maven 3.5.0'
        jdk 'jdk 8u71'     
        oc 'oc3'
    }
                    
    environment{				
		OPENSHIFT_PROJECT = "prueba"
		OPENSHIFT_TOKEN="l7aP8WJIx0nuFHMX2fM-6eVVXXPNsNlSC4MRQ3xGasM"
		OPENSHIFT_ENPOINT="https://okd-milrc1.dodi.io:8443"
		
		artifactID = readMavenPom().getArtifactId()
    	artifactVersion = readMavenPom().getVersion()
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '3', artifactNumToKeepStr: '3'))
    }

    stages {

        stage('Build') {
            steps {            
            echo "DATOS DE ENTRADA....$source"                    	   				                                  
                sh 'mvn -B -DskipTests -Ddockerfile.skip=true clean package'               
            }
        }

        stage('Install') {
            steps {         
                echo 'Install artifact....'
                sh 'mvn -B clean install -DskipTests'                 
            }
        }
        
        stage('Test') {
            steps {
                echo 'Install artifact....'
                sh 'mvn -B clean install -Ddockerfile.skip=true'                 
            }
        }   
                               
        stage('Deploy nexus') {
            steps {            	
                echo 'Deloying artifact....'
                //echo "mvn deploy -DskipTests"// -Ddockerfile.username=$DOCKER_USER -Ddockerfile.password=$DOCKER_PASS'   
                //sh 'mvn deploy -DskipTests -Ddockerfile.username=aherreros -Ddockerfile.password=pepe'                 
            }                        
        }                  

        stage('Deploy Openshift Preproduction') {                
            when { branch 'develop' }
            steps {   
            
            	connectOpenShift("pre")         	
                                
            	script {                
                	try{                           		
                		deployAppShift()    
	                	//sh "oc new-app aherreros/microservicesdocomo:${artifactID}-${artifactVersion} --name ${artifactID}"
	                	//sh "oc expose svc/${artifactID}"
	                	
                	}catch (Exception e) {
                		deployImageOpenShift()
                		//sh "oc import-image ${artifactID}:${artifactID}-${artifactVersion} --from aherreros/microservicesdocomo:${artifactID}-${artifactVersion}"
                		
                	}finally{                		
                		echo 'add environment....'
                		updateEnvironmentOpenShift("pre")
		           		//sh "oc set env dc/${artifactID} GIT_URI=https://github.com/marceito2002/configServerPruebas.git"
						//sh "oc set env dc/${artifactID} GIT_PASS="
						//sh "oc set env dc/${artifactID} GIT_USER="
						//sh "oc set env dc/${artifactID} SPRING_PROFILES_ACTIVE=openshift"                	    
                	}
                }                                                          
            }          
        }  
        
        stage('Deploy Openshift Production') {
            when { branch 'master' }                
            steps {            	
            	connectOpenShift("pro")            	
                                
            	script {                
                	try{                           		    
	                	deployImageOpenShift()
	                	//sh "oc new-app aherreros/microservicesdocomo:${artifactID}-${artifactVersion} --name ${artifactID}"
	                	//sh "oc expose svc/${artifactID}"
	                	
                	}catch (Exception e) {
                		deployImageOpenShift() //sh "oc import-image ${artifactID}:${artifactID}-${artifactVersion} --from aherreros/microservicesdocomo:${artifactID}-${artifactVersion}"
                		
                	}finally{
                		echo 'add environment....'
                		updateEnvironmentOpenShift("pro")
		           		//sh "oc set env dc/${artifactID} GIT_URI=https://github.com/marceito2002/configServerPruebas.git"
						//sh "oc set env dc/${artifactID} GIT_PASS="
						//sh "oc set env dc/${artifactID} GIT_USER="
						//sh "oc set env dc/${artifactID} SPRING_PROFILES_ACTIVE=openshift"                	    
                	}
                }                                                          
            }          
        }                          

    }
    post {
        always {
            script {
                currentBuild.result = currentBuild.result ?: 'SUCCESS'
            }
        }
    }
}